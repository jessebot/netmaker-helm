apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "netmaker.fullname" . }}-env
  labels:
    {{- include "netmaker.labels" . | nindent 4 }}
data:
  BROKER_ENDPOINT: "wss://{{ required "A valid .Values.mq.ingress.host entry required!" .Values.mq.ingress.host }}"
  SERVER_NAME: {{ required "A valid .Values.netmaker.serverName entry required!" .Values.netmaker.serverName }}
  STUN_LIST: "stun1.netmaker.io:3478,stun2.netmaker.io:3478,stun1.l.google.com:19302,stun2.l.google.com:19302"
  SERVER_HOST: "SERVER_PUBLIC_IP"
  SERVER_API_CONN_STRING: "{{ required "A valid .Values.api.ingress.host entry required!" .Values.api.ingress.host }}:443"
  COREDNS_ADDR: "SERVER_PUBLIC_IP"
  DNS_MODE: "on"
  SERVER_HTTP_HOST: {{ required "A valid .Values.api.ingress.host entry required!" .Values.api.ingress.host }}
  API_PORT: "{{ .Values.api.service.port }}"
  MESSAGEQUEUE_BACKEND: "on"
  CORS_ALLOWED_ORIGIN: "*"
  DISPLAY_KEYS: "on"
  DATABASE: "{{  .Values.externalDatabase.type }}"
  SERVER_BROKER_ENDPOINT: "ws://{{ .Release.Name }}-mqtt.{{ .Release.Namespace }}.svc.cluster.local:1883"
  VERBOSITY: "1"
  K8s: "true"
  JWT_VALIDITY_DURATION: "{{ .Values.netmaker.jwtDuration }}"
  RAC_AUTO_DISABLE: "{{ .Values.netmaker.racAutoDisable }}"
  CACHING_ENABLED: "false" # should be false for HA to work
  FRONTEND_URL: "https://{{ .Values.ui.ingress.host }}"
  {{- if .Values.netmaker.oauth.enabled }}
  AUTH_PROVIDER: "{{ .Values.netmaker.oauth.provider }}"
  {{- end }}
  {{- if .Values.turn.enabled -}}
  USE_TURN: "true"
  {{- end -}}
